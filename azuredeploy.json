{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.1",
    "parameters": {
        "siteName": {
            "type": "string",
            "metadata": {
                "description": "The Site name for your Fortis pipeline."
            }
        },
        "acsMasterCount": {
            "type": "int",
            "metadata": {
                "description": "The number of Kubernetes masters for the cluster."
            }
        },
        "acsAgentCount": {
            "type": "int",
            "metadata": {
                "description": "The number of agents for the cluster.  This value can be from 1 to 100 (note, for Kubernetes clusters you will also get 1 or 2 public agents in addition to these seleted masters)"
            }
        },
        "agentVMSize": {
            "type": "string",
            "allowedValues": [
                "Standard_DS1",
                "Standard_DS2",
                "Standard_DS3",
                "Standard_DS4",
                "Standard_DS11",
                "Standard_DS12",
                "Standard_DS13",
                "Standard_DS14",
                "Standard_GS1",
                "Standard_GS2",
                "Standard_GS3",
                "Standard_GS4",
                "Standard_GS5",
                "Standard_L4s",
                "Standard_L8s"
            ],
            "metadata": {
                "description": "The size of the Virtual Machine."
            }
        },
        "dnsNamePrefix": {
            "type": "string",
            "metadata": {
                "description": "Sets the Domain name prefix for the cluster.  The concatenation of the domain name and the regionalized DNS zone make up the fully qualified domain name associated with the public IP address."
            }
        },
        "adminUsername": {
            "type": "string",
            "defaultValue": "fortisadmin",
            "metadata": {
                "description": "User name for the Linux Virtual Machines."
            }
        },
        "sparkWorkers": {
            "type": "int",
            "metadata": {
                "description": "The number of Spark Worker nodes to create."
            }
        },
        "cassandraNodes": {
            "type": "int",
            "metadata": {
                "description": "The number of Cassandra nodes to create."
            }
        },
        "siteType": {
            "type": "string",
            "allowedValues": [
                "humanitarian",
                "health"
            ],
            "metadata": {
                "description": "The type of fortis site that you want to deploy. This will drive the default list of sites, topics and Public Facebook pages that Fortis will start monitoring."
            }
        },
        "sshPublicKey": {
            "type": "securestring",
            "metadata": {
                "description": "Configure all linux machines with the SSH RSA public key string.  Your key should include three parts, for example 'ssh-rsa AAAAB...snip...UcyupgH azureuser@linuxvm'"
            }
        },
        "servicePrincipalAppId": {
            "metadata": {
                "description": "Client ID (used by cloudprovider)"
            },
            "type": "securestring"
        },
        "servicePrincipalAppKey": {
            "metadata": {
                "description": "The Service Principal Client Secret."
            },
            "type": "securestring"
        }
    },
    "variables": {
        "storageAccountName": "[concat(substring(uniquestring(resourceGroup().id), 8), 'prstrg')]",
        "premStorageSku": "Premium_LRS",
        "vmStorageAccountType": "Standard_LRS",
        "vmName": "FortisDeployVM",
        "applicationInsightServiceName": "[concat('FortisAppInsight-', parameters('siteName'))]",
        "kubernetesName": "[concat('containerservice-', resourceGroup().name)]",
        "orchestratorType": "Kubernetes",
        "fortisEventHubName": "tadawebEHTopic",
        "deploymentVmSize": "Standard_D2_v2",
        "deisStorageAcctName": "[concat(substring(uniquestring(resourceGroup().id), 8), 'deisstorage')]",
        "managePolicy": "ManagePolicy",
        "sendPolicy": "SendPolicy",
        "agentOsType": "Linux",
        "listenPolicy": "ListenPolicy",
        "ehVersion": "2015-08-01",
        "ehConsumerGroupName": "fortisEHConsumerGroup",
        "addressPrefix": "10.0.0.0/16",
        "subnetName": "Subnet",
        "sbVersion": "2017-04-01",
        "subnetPrefix": "10.0.0.0/24",
        "virtualNetworkName": "FortisVNet",
        "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
        "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
        "githubClonePath": "https://github.com/xtophs/project-fortis-pipeline.git",
        "sbNamespace": "[concat(substring(uniquestring(resourceGroup().id), 8), 'fortissbns')]",
        "sbQueueNameConfiguration": "configuration",
        "sbQueueNameCommand": "command",
        "sbAuthRuleResourceId": "[resourceId('Microsoft.ServiceBus/namespaces/authorizationRules', variables('sbNamespace'), variables('defaultSASKeyName'))]",
        "defaultSASKeyName": "RootManageSharedAccessKey",
        "sbAuthRuleName": "[concat(variables('sbNamespace'),'/fortisAuthRule')]",
        "eventHubNamespace": "[concat(substring(uniquestring(resourceGroup().id), 8), 'fortisehns')]",
        "eventHubName": "published-messages",
        "eventHubMessagingUnits": "1",
        "eventHubSku": "2",
        "eventhubResource": "[resourceId('Microsoft.Eventhub/namespaces/authorizationRules', variables('eventHubNamespace'), 'fortisAuthRule')]",
        "useServicePrincipal": "[variables('useServicePrincipalDictionary')[variables('orchestratorType')]]",
        "useServicePrincipalDictionary": {
            "DCOS": 0,
            "Swarm": 0,
            "Kubernetes": 1
        },
        "servicePrincipalFields": [
            null,
            {
                "ClientId": "[parameters('servicePrincipalAppId')]",
                "Secret": "[parameters('servicePrincipalAppKey')]"
            }
        ]
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[variables('storageAccountName')]",
            "apiVersion": "2016-01-01",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "[variables('premStorageSku')]"
            },
            "kind": "Storage",
            "properties": {}
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[variables('deisStorageAcctName')]",
            "apiVersion": "2016-01-01",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "[variables('vmStorageAccountType')]"
            },
            "kind": "Storage",
            "properties": {}
        },
        {
            "apiVersion": "2015-01-01",
            "name": "eventhubPrimaryKey",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "incremental",
                "templateLink": {
                    "uri": "https://raw.githubusercontent.com/davidjrh/azurerm-newguid/master/NewGuid.json",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "seed": {
                        "value": "1"
                    }
                }
            }
        },
        {
            "apiVersion": "2015-01-01",
            "name": "eventhubSecondaryKey",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "incremental",
                "templateLink": {
                    "uri": "https://raw.githubusercontent.com/davidjrh/azurerm-newguid/master/NewGuid.json",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "seed": {
                        "value": "0"
                    }
                }
            }
        },
        {
            "apiVersion": "[variables('sbVersion')]",
            "name": "[variables('sbNamespace')]",
            "type": "Microsoft.ServiceBus/namespaces",
            "location": "[resourceGroup().location]",
            "resources": [
                {
                    "apiVersion": "[variables('sbVersion')]",
                    "name": "[variables('sbQueueNameCommand')]",
                    "type": "Queues",
                    "dependsOn": [
                        "[concat('Microsoft.ServiceBus/namespaces/', variables('sbNamespace'))]"
                    ]
                },
                {
                    "apiVersion": "[variables('sbVersion')]",
                    "name": "[variables('sbQueueNameConfiguration')]",
                    "type": "Queues",
                    "dependsOn": [
                        "[concat('Microsoft.ServiceBus/namespaces/', variables('sbNamespace'))]"
                    ]
                },
                {
                    "apiVersion": "[variables('sbVersion')]",
                    "name": "[variables('sbAuthRuleName')]",
                    "type": "Microsoft.ServiceBus/namespaces/authorizationRules",
                    "dependsOn": [
                        "[concat('Microsoft.ServiceBus/namespaces/', variables('sbNamespace'))]"
                    ],
                    "location": "[resourceGroup().location]",
                    "properties": {
                        "Rights": [
                            "Send",
                            "Listen",
                            "Manage"
                        ]
                    }
                }
            ]
        },
        {
            "apiVersion": "[variables('ehVersion')]",
            "name": "[variables('eventHubNamespace')]",
            "type": "Microsoft.EventHub/namespaces",
            "location": "[resourceGroup().location]",
            "properties": {
                "MessagingSku": "[variables('eventHubSku')]",
                "MessagingSKUPlan": {
                    "MessagingUnits": "[variables('eventHubMessagingUnits')]",
                    "SKU": "[variables('eventHubSku')]"
                }
            },
            "resources": [
                {
                    "apiVersion": "[variables('ehVersion')]",
                    "name": "[variables('eventHubName')]",
                    "location": "[resourceGroup().location]",
                    "type": "eventhubs",
                    "dependsOn": [
                        "[concat('Microsoft.EventHub/namespaces/', variables('eventHubNamespace'))]"
                    ],
                    "properties": {
                        "path": "[variables('eventHubName')]"
                    }
                },
                {
                    "apiVersion": "[variables('ehVersion')]",
                    "name": "[concat(variables('eventHubNamespace'),'/fortisAuthRule')]",
                    "type": "Microsoft.EventHub/namespaces/authorizationRules",
                    "dependsOn": [
                        "[concat('Microsoft.EventHub/namespaces/', variables('eventHubNamespace'))]"
                    ],
                    "location": "[resourceGroup().location]",
                    "properties": {
                        "PrimaryKey": "[reference('eventhubPrimaryKey').outputs.guid.value]",
                        "SecondaryKey": "[reference('eventhubSecondaryKey').outputs.guid.value]",
                        "Rights": [
                            "Send",
                            "Listen",
                            "Manage"
                        ]
                    }
                }
            ]
        },
        {
            "apiVersion": "2015-06-15",
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('virtualNetworkName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('addressPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('subnetName')]",
                        "properties": {
                            "addressPrefix": "[variables('subnetPrefix')]"
                        }
                    }
                ]
            }
        },
        {
            "name": "[variables('applicationInsightServiceName')]",
            "type": "Microsoft.Insights/components",
            "location": "eastus",
            "apiVersion": "2014-04-01",
            "tags": {
                "displayName": "Component ApplicationInsight"
            },
            "properties": {
                "Application_Type": "other",
                "applicationId": "[variables('applicationInsightServiceName')]"
            }
        },
        {
            "apiVersion": "2015-01-01",
            "name": "installVM",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "incremental",
                "templateLink": {
                    "uri": "https://raw.githubusercontent.com/xtophs/project-fortis-pipeline/multi-dc-deploy/azuredeploy.installbox.json",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "siteName": {
                        "value": "[parameters('siteName')]"
                    },
                    "vmName" : {
                        "value" : "[variables('vmName')]"
                    },
                    "deploymentVMSize": {
                        "value": "[variables('deploymentVmSize')]"
                    },
                    "adminUsername": {
                        "value": "[parameters('adminUsername')]"
                    },
                    "subnetRef": {
                        "value": "[variables('subnetref')]"
                    },
                    "sshPublicKey": {
                        "value": "[parameters('sshPublicKey')]"
                    }
                }
            },
            "dependsOn": [
                "[concat('Microsoft.Insights/components/', variables('applicationInsightServiceName'))]",
                "[concat('Microsoft.EventHub/namespaces/', variables('eventHubNamespace'))]",
                "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"                
            ]
        },
        {
            "apiVersion": "2017-01-31",
            "type": "Microsoft.ContainerService/containerServices",
            "location": "[resourceGroup().location]",
            "name": "[variables('kubernetesName')]",
            "properties": {
                "orchestratorProfile": {
                    "orchestratorType": "[variables('orchestratorType')]"
                },
                "masterProfile": {
                    "count": "[parameters('acsMasterCount')]",
                    "dnsPrefix": "[concat(substring(uniquestring(resourceGroup().id), 4), parameters('dnsNamePrefix'))]"
                },
                "agentPoolProfiles": [
                    {
                        "name": "agentpools",
                        "count": "[parameters('acsAgentCount')]",
                        "vmSize": "[parameters('agentVMSize')]",
                        "dnsPrefix": "[concat(substring(uniquestring(resourceGroup().id), 4), parameters('dnsNamePrefix'),'agents')]"
                    }
                ],
                "linuxProfile": {
                    "adminUsername": "[parameters('adminUsername')]",
                    "ssh": {
                        "publicKeys": [
                            {
                                "keyData": "[parameters('sshPublicKey')]"
                            }
                        ]
                    }
                },
                "servicePrincipalProfile": "[variables('servicePrincipalFields')[variables('useServicePrincipal')]]"
            }
        },
        {
            "apiVersion": "2015-01-01",
            "name": "installvm-extension",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "incremental",
                "templateLink": {
                    "uri": "https://raw.githubusercontent.com/xtophs/project-fortis-pipeline/multi-dc-deploy/azuredeploy.installbox-ext.json",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "siteName": {
                        "value": "[parameters('siteName')]"
                    },
                    "vmName" : {
                        "value" : "[variables('vmName')]"
                    },
                    "adminUsername": {
                        "value": "[parameters('adminUsername')]"
                    },
                    "appInsightsKey": {
                      "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightServiceName')), '2014-04-01').InstrumentationKey]"  
                    },    
                    "kubernetesEndpoint": {
                        "value": "[reference(resourceId('Microsoft.ContainerService/containerServices', variables('kubernetesName'))).masterProfile.fqdn]"  
                    },
                    "kubernetesName" : {
                        "value": "[variables('kubernetesName')]"
                    },
                    "storageAccountName" : {
                        "value": "[variables('storageAccountName')]"
                    },
                    "siteType" : {
                        "value": "[parameters('siteType')]"
                    },
                    "sparkWorkers" : {
                        "value": "[parameters('sparkWorkers')]"
                    },
                    "cassandraNodes" : {
                        "value": "[parameters('cassandraNodes')]"
                    },
                    "servicePrincipalAppId": {
                        "value": "[parameters('servicePrincipalAppId')]"
                    },
                    "servicePrincipalAppKey": {
                        "value": "[parameters('servicePrincipalAppKey')]"
                    },
                    "dnsNamePrefix" : {
                        "value": "[parameters('dnsNamePrefix')]"
                    },
                    "eventhubResource" : {
                        "value": "[variables('eventHubResource')]"
                    },
                    "ehVersion" : { 
                        "value": "[variables('ehVersion')]"
                    },
                    "sbAuthRuleResourceId" : {
                        "value": "[variables('sbAuthRuleResourceId')]"
                    },
                    "sbVersion" : {
                        "value": "[variables('sbVersion')]"
                    },
                    "githubClonePath" :{
                        "value": "[variables('githubClonePath')]"
                    }
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments/', 'installVM')]",
                "[resourceId('Microsoft.ContainerService/containerServices/', variables('kubernetesName'))]"
            ]
        }    
    ],
    "outputs": {
        "kubernetesMasterFQDN": {
            "type": "string",
            "value": "[reference(resourceId('Microsoft.ContainerService/containerServices', variables('kubernetesName'))).masterProfile.fqdn]"
        },
        "fortisAdminSiteURL": {
            "type": "string",
            "value": "[reference(resourceId('Microsoft.Storage/storageAccounts', variables('deisStorageAcctName'))).tags.FORTIS_ADMIN_INTERFACE_HOST]"
        },
        "agentFQDN": {
            "type": "string",
            "value": "[reference(concat('Microsoft.ContainerService/containerServices/', variables('kubernetesName'))).agentPoolProfiles[0].fqdn]"
        },
        "VirtualNetworkRef": {
            "type": "string",
            "value": "[reference(concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName')))]"
        },
        "VnetID" : {
            "type" : "string",
            "value": "[variables('vnetID')]"
        }
    }
}
